{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      objUser = _useState2[0],\n      setObjUser = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      listUsers = _useState4[0],\n      setListUsers = _useState4[1];\n\n  var getMoviesFromApi = function getMoviesFromApi() {\n    return fetch('https://api.github.com/users/witillan').then(function (resposta) {\n      return resposta.json();\n    }).then(function (r) {\n      setObjUser(r);\n      return r;\n    }).catch(function (error) {\n      alert(\"Ocorreu um erro \" + error.text() + \" ao buscar o usu\\xE1rio na API do \\\"Github\\\"\");\n    });\n  };\n\n  var getUsers = function getUsers() {\n    return fetch('https://api.github.com/users').then(function (resposta) {\n      return resposta.json();\n    }).then(function (r) {\n      setListUsers(r);\n      return r;\n    }).catch(function (error) {\n      alert(\"Ocorreu um erro \" + error.text() + \" ao buscar os usu\\xE1rios na API do \\\"Github\\\"\");\n    });\n  };\n\n  useEffect(function () {\n    getMoviesFromApi();\n  }, []);\n\n  var Home = function Home() {\n    return _jsx(View, {\n      style: styles.container,\n      children: _jsxs(View, {\n        style: styles.card,\n        children: [_jsx(Text, {\n          style: [styles.textBold, {\n            fontSize: 25\n          }],\n          children: \"Informa\\xE7\\xF5es do Usu\\xE1rio\"\n        }), _jsx(View, {\n          style: [styles.viewText, {\n            marginTop: 20\n          }],\n          children: _jsx(\"img\", {\n            alt: \"image_user\",\n            style: {\n              width: 70,\n              borderRadius: '100%'\n            },\n            src: objUser.avatar_url + \".png\"\n          })\n        }), _jsxs(View, {\n          style: [styles.viewText, {\n            marginTop: 20\n          }],\n          children: [_jsx(Text, {\n            style: styles.textBold,\n            children: \"Usu\\xE1rio: \"\n          }), _jsx(Text, {\n            style: styles.text,\n            children: objUser.name\n          })]\n        }), _jsxs(View, {\n          style: [styles.viewText],\n          children: [_jsx(Text, {\n            style: styles.textBold,\n            children: \"Qtd Reposit\\xF3rios Publico: \"\n          }), _jsx(Text, {\n            style: styles.text,\n            children: objUser.public_repos\n          })]\n        }), _jsx(Text, {\n          style: [styles.text, styles.link, {\n            padding: 2\n          }],\n          onPress: function onPress() {\n            Linking.openURL(objUser.html_url.toString());\n          },\n          children: \"Ir para o Reposit\\xF3rio do Usu\\xE1rio\"\n        }), _jsx(TouchableOpacity, {\n          style: {\n            marginTop: 20\n          },\n          onPress: function onPress() {\n            return navigateToUsers();\n          },\n          children: _jsx(Text, {\n            children: \"Outros usu\\xE1rios\"\n          })\n        })]\n      })\n    });\n  };\n\n  return _jsx(Home, {});\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  card: {\n    borderRadius: 5,\n    padding: 20,\n    backgroundColor: 'green',\n    shadowColor: '#000000CC',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  text: {\n    fontSize: 15,\n    color: 'white'\n  },\n  textBold: {\n    fontSize: 15,\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  viewText: {\n    flexDirection: 'row'\n  },\n  link: {\n    color: '#191970'\n  }\n});","map":{"version":3,"sources":["D:/Projects/userGitHub/App.js"],"names":["React","useEffect","useState","App","objUser","setObjUser","listUsers","setListUsers","getMoviesFromApi","fetch","then","resposta","json","r","catch","error","alert","text","getUsers","Home","styles","container","card","textBold","fontSize","viewText","marginTop","width","borderRadius","avatar_url","name","public_repos","link","padding","Linking","openURL","html_url","toString","navigateToUsers","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","shadowColor","color","fontWeight","flexDirection"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { TouchableOpacity, Linking, StyleSheet, Text, View } from 'react-native';\n\nexport default function App() {\n\n  const [objUser, setObjUser] = useState({})\n  const [listUsers, setListUsers] = useState({})\n\n  const getMoviesFromApi = () => {\n    return fetch('https://api.github.com/users/witillan')\n      .then((resposta) => resposta.json())\n      .then((r) => {\n        setObjUser(r)\n        return r\n      })\n      .catch((error) => {\n        alert(`Ocorreu um erro ${error.text()} ao buscar o usuário na API do \"Github\"`);\n      })\n  }\n\n  const getUsers = () => {\n    return fetch('https://api.github.com/users')\n      .then((resposta) => resposta.json())\n      .then((r) => {\n        setListUsers(r)\n        return r\n      })\n      .catch((error) => {\n        alert(`Ocorreu um erro ${error.text()} ao buscar os usuários na API do \"Github\"`);\n      })\n  }\n\n  useEffect(() => {\n    getMoviesFromApi()\n  }, [])\n\n  const Home = () => {\n    return (\n      <View style={styles.container}>\n        <View style={styles.card}>\n          <Text style={[styles.textBold, { fontSize: 25 }]}>Informações do Usuário</Text>\n          <View style={[styles.viewText, { marginTop: 20 }]}>\n            <img alt='image_user' style={{ width: 70, borderRadius: '100%' }} src={`${objUser.avatar_url}.png`} />\n          </View>\n          <View style={[styles.viewText, { marginTop: 20 }]}>\n            <Text style={styles.textBold}>Usuário: </Text>\n            <Text style={styles.text}>{objUser.name}</Text>\n          </View>\n          <View style={[styles.viewText]}>\n            <Text style={styles.textBold}>Qtd Repositórios Publico: </Text>\n            <Text style={styles.text}>{objUser.public_repos}</Text>\n          </View>\n          <Text\n            style={[styles.text, styles.link, { padding: 2, }]}\n            onPress={() => {\n              Linking.openURL(objUser.html_url.toString());\n            }}>\n            Ir para o Repositório do Usuário\n          </Text>\n          <TouchableOpacity style={{ marginTop: 20 }} onPress={() => navigateToUsers()} >\n            <Text>Outros usuários</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    )\n  }\n\n  return (\n    <Home />\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  card: {\n    borderRadius: 5,\n    padding: 20,\n    backgroundColor: 'green',\n    shadowColor: '#000000CC',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  text: {\n    fontSize: 15,\n    color: 'white'\n  },\n  textBold: {\n    fontSize: 15,\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  viewText: {\n    flexDirection: 'row',\n  },\n  link: {\n    color: '#191970'\n  }\n});\n"]},"metadata":{},"sourceType":"module"}